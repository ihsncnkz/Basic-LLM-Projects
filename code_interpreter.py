# -*- coding: utf-8 -*-
"""Code Interpreter.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1U3N2-qooccndsGi6yKM5FeOYnv-omtCa

# Introduction
I will develop an assistant with Huggingface. This AI assistant will use the Deepseek model and It will add comments for the Python code.
"""

# Library
import os
import torch
from google.colab import drive, userdata
from huggingface_hub import login, InferenceClient
from transformers import AutoTokenizer, AutoModelForCausalLM

# Use the token to use the model in Huggingface
hf_token = userdata.get('HF_TOKEN')
login(hf_token, add_to_git_credential = True)

# Download and import tokenizer and model
tokenizer = AutoTokenizer.from_pretrained("deepseek-ai/deepseek-coder-6.7b-instruct", trust_remote_code = True)
model = AutoModelForCausalLM.from_pretrained("deepseek-ai/deepseek-coder-6.7b-instruct", trust_remote_code = True, torch_dtype = torch.bfloat16).cuda()

# Masseges for try the model
messages=[
    { 'role': 'user', 'content': "write a quick sort algorithm in python."}
]

# I enter the messages with inputs. The Outputs create a message with LLM model
inputs = tokenizer.apply_chat_template(messages, add_generation_prompt=True, return_tensors="pt").to(model.device)
outputs = model.generate(inputs, max_new_tokens=512, do_sample=False, top_k=50, top_p=0.95, num_return_sequences=1, eos_token_id=tokenizer.eos_token_id)
print(tokenizer.decode(outputs[0][len(inputs[0]):], skip_special_tokens=True))

# System prompt for my llm model
system_message = "You are a helpful assistant specialized in analyzing and explaining Python code. \
Your primary task is to take raw Python code as input and return the same code annotated with clear, concise, and informative \
comments in English. Your comments should explain the purpose of functions, logic of control structures, \
and the role of key variables and operations.\n"
system_message += "Write comments that would help a beginner to intermediate programmer understand the code’s structure and behavior. Keep comments aligned with the code using standard Python comment syntax (#)."
system_message += """
Input (user prompt):
def factorial(n):
  if n == 0:
    return 1
  else:
    return n * factorial(n - 1)"""

system_message += """Output (your response):
# This function calculates the factorial of a number using recursion
def factorial(n):
    # Base case: the factorial of 0 is defined as 1
    if n == 0:
        return 1
    else:
        # Recursive case: n * factorial of (n - 1)
        return n * factorial(n - 1)"""

system_message

# this is a message creater for model
def createrOfMessages(python_code):
  messages = [
      {'role' : 'system', 'content' : system_message},
      {'role' : 'user', 'content' : python_code}
  ]
  return messages

# This function create message with my python code
def create_prompt(python_code):
  messages = createrOfMessages(python_code)
  inputs = tokenizer.apply_chat_template(messages, add_generation_prompt=True, return_tensors="pt").to(model.device)
  outputs = model.generate(inputs, max_new_tokens=512, do_sample=False, top_k=50, top_p=0.95, num_return_sequences=1, eos_token_id=tokenizer.eos_token_id)
  print(tokenizer.decode(outputs[0][len(inputs[0]):], skip_special_tokens=True))

# Sample Python code
python_code = """
def fibonacci(n):
    a, b = 0, 1
    result = []
    for _ in range(n):
        result.append(a)
        a, b = b, a + b
    return result

def main():
    n = int(input("Kaç terim istiyorsunuz? "))
    dizi = fibonacci(n)
    print("Fibonacci dizisi:", dizi)

if __name__ == "__main__":
    main()
"""

create_prompt(python_code)

"""# CONCLUSION
I developed an assistant and It added comments to my code. If You are learning Python programming language, this AI assistant can help you understand the code. In this project, I used the Huggingface platform and The Deepseek model. Thank you for reviewing my project. I hope it was useful for you. I will continue to share projects. If you want to be informed in advance, you can follow me from the links below.

[LinkedIn](https://www.linkedin.com/in/ihsancenkiz/)<br>
[GitHub](https://github.com/ihsncnkz)<br>
[Kaggle](https://www.kaggle.com/ihsncnkz)
"""